Assignment - In progress

Complete the form, then choose the appropriate button at the bottom.
Title 	HW3: Lists of Contacts
Due 	Oct 3, 2011 6:00 pm
Status 	Not Started
Grade Scale 	Points (max 4.0)
Modified by instructor 	Sep 27, 2011 1:34 pm
Instructions
 In this assignment, you'll add a ListView to your contacts application. (you can extend ListActivity if you'd like, which shortens the setup a wee bit - I didn't use it in class because I wanted to be more explicit about what's going on).

Do the following

    Create a new activity that creates a list of dummy contacts and displays them in a ListView. Feel free to use a single TextView to represent entries in the list, and you can use toString() in your contact objects to get the display value. (Note that in a real app I would not recommend using toString() for anything other that debugging/logging).

    If you would like to try it, you can create a more complex entry view that displays the contact name and maybe a phone number. Not required, and no penalty if you do not do this, but could be interesting to try if you have the time.
    When a contact in the list is clicked, start your "display contact" activity. Use startActivityForResult() and set up the appropriate callback to receive the result. Pass the contact in the "extras" for the intent.

    (Note that the contact will need to be serializable; you can experiment with parcelable if you'd like - see http://shri.blog.kraya.co.uk/2010/04/26/android-parcel-data-to-pass-between-activities-using-parcelable-classes/ for a good example, but it's a bit of extra work. Apparently it's much faster than using serializable on Android)
    Change your "display contact" activity to read the contact to be displayed from the Intent and display it

     
    Add a menu item to "display contact" named "Edit" - when clicked, send that contact to your "edit contact" activity (again via startActivityForResult)

     
    Modify your "edit contact" activity to read the contact from the Intent and edit it. Add "save" and "revert" buttons to this activity. "Save" should send the modified contact back (and finish()); "Revert" should just return RESULT_CANCELED.

     
    Update the contact  as you progress back through the display and list views

Now you're almost ready to deal with the real data (in the next assignment...)